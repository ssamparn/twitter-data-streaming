server:
  port: 8183
  servlet:
#    context-path: /elastic-query-service    # if requesting via localhost
    context-path: /                          # if requesting via api gateway

spring:
  application:
    name: elastic-query-service
  profiles:
    active: elastic_query
  config:
    import: 'optional:configserver:http://localhost:8888'
  cloud:
    config:
      name: elastic-query-service,config-client
      uri: http://localhost:8888
      username: spring_cloud_user
#     password: springCloud_Pwd!
      password: '{cipher}7a0d735158a760bab4ffb791ca55f52df9aa3a2b27b8411e968264d7726cc7597ea9ff5a57dae90fd68c9c09ba6a6970'
      allow-override: true
    loadbalancer:
      ribbon:
        enabled: false

encrypt:
  key: APODNU3093r2rbjzxcn09u213asdhy08WRFH

logging:
  level:
    ROOT: INFO
    com.spring.microservices: INFO

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs, /actuator/**, /**

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/euraka/
  instance:
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 2

management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health, prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      cache.time-to-live: 1ms

#----------------------------------------------------------------------------------------------------------------------
# Uncomment below config properties to build locally. Otherwise, start local config server before building the project.
#----------------------------------------------------------------------------------------------------------------------
#elastic-config:
#  index-name: twitter-index
#  connection-url: http://localhost:9200
#  connect-timeout-ms: 5000
#  socket-timeout-ms: 30000
#  is-repository: false
#
#elastic-query-config:
#  text-field: text
#  is-repository: true
#
#elastic-query-service:
#  version: v1
#  webclient:
#    connect-timeout-ms: 10000
#    read-timeout-ms: 10000
#    write-timeout-ms: 10000
#    max-in-memory-size: 10485760 # 10MB
##    query-type: 'ANALYTICS_DATABASE'
#    query-type: 'KAFKA_STATE_STORE'
#  query-from-kafka-state-store:
#    method: GET
#    uri: "http://localhost:8187/kafka-streams-service/get-word-count-by-word/{word}"
#    uri: "http://kafka-streams-service/kafka-streams-service/get-word-count-by-word/{word}"
#  query-from-analytics-database:
#    method: GET
#    uri: "http://localhost:8188/twitter-analytics-service/get-word-count-by-word/{word}"
#    uri: "http://twitter-analytics-service/twitter-analytics-service/get-word-count-by-word/{word}"
