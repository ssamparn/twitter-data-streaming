server:
  port: 8187
  servlet:
    context-path: /kafka-streams-service

spring:
  application:
    name: kafka-streams-service
  profiles:
    active: kafka_streams
  config:
    import: 'optional:configserver:http://localhost:8888'
  cloud:
    config:
      name: kafka-streams-service,config-client
      uri: http://localhost:8888
      username: spring_cloud_user
#      password: springCloud_Pwd!
      password: '{cipher}7a0d735158a760bab4ffb791ca55f52df9aa3a2b27b8411e968264d7726cc7597ea9ff5a57dae90fd68c9c09ba6a6970'
      allow-override: true
    loadbalancer:
      ribbon:
        enabled: false

encrypt:
  key: APODNU3093r2rbjzxcn09u213asdhy08WRFH

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

security:
  paths-to-ignore: /api-docs, /actuator/**, /**

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/euraka/
  instance:
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 2

management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health, prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      cache.time-to-live: 1ms

#----------------------------------------------------------------------------------------------------------------------
# Uncomment below config properties to build locally. Otherwise, start local config server before building the project.
#----------------------------------------------------------------------------------------------------------------------
#retry-config:
#  initial-interval-ms: 1000
#  max-interval-ms: 10000
#  multiplier: 2.0
#  maxAttempts: 3
#  sleep-time-ms: 2000
#
#kafka-config:
#  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
#  schema-registry-url-key: schema.registry.url
#  schema-registry-url: http://localhost:8081
#  topic-names-to-create:
#    - twitter-topic
#    - twitter-analytics-topic
#
#kafka-streams-config:
#  application-id: kafka-streams-application
#  input-topic-name: twitter-topic
#  output-topic-name: twitter-analytics-topic
#  state-file-location: ${HOME}/kafka-streaming-state
#  word-count-store-name: word-count-store
#
#kafka-streams-service:
#  version: v1
#  custom-audience: kafka-streams-service